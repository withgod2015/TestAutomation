# Generated by Selenium IDE
import pytest
import time
import json
import subprocess # Selenium chrome 실행시 "Chrome이 자동화된 테스트 소프트웨어에 의해 제어되고 있습니다." 자동화 메시지 제거
import os

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options

# Chrome 실행 파일 경로
chrome_path = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"

# 사용자 데이터 디렉토리 경로
user_data_dir = "D:\\chromeCookie";  

# 원격 디버깅 포트 설정
remote_debugging_port = "9222"

# 테스트 데이터 정의 (반복 테스트를 위한 입력값 목록)
test_data = [
    {"m365Id": "test1@example.com", "password": "Password123!"},
    {"m365Id": "test2@example.com", "password": "SecurePass456!"},
    {"m365Id": "test3@example.com", "password": "AnotherPass789!"},
]


class TestGetofficeappdevcreate():
  def setup_method(self, method):
    # Chrome을 원격 디버깅 모드로 실행
    subprocess.Popen(
        [chrome_path, f"--remote-debugging-port={remote_debugging_port}", f"--user-data-dir={user_data_dir}"],
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        shell=True,
    )
    
    # WebDriver 설정
    chrome_service = Service()  # chromedriver가 PATH에 있어야 함
    options = Options()
    options.add_argument("--disable-notifications")
    options.add_argument("--disable-popup-blocking")
    options.add_argument("disable-blink-features=AutomationControlled")
    options.add_experimental_option("debuggerAddress", f"127.0.0.1:{remote_debugging_port}")
    options.headless = False  # Headless 모드 비활성화

    # WebDriver 생성
    self.driver = webdriver.Chrome(service=chrome_service, options=options)
    self.driver.implicitly_wait(10)  # 암묵적 대기 30초 설정
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  @pytest.mark.parametrize("data", test_data)  # 파라미터화된 테스트
  def test_getofficeappdevcreate(self, data):
    # Test name: getoffice_app_dev_create
    # Step # | name | target | value
    # 1 | open | 
    self.driver.get("https://testurl url removed for corporte security")
    # 쿠키 추가 후 새로고침하여 적용
    self.driver.refresh()
    # 2 | setWindowSize | 1798x951 | 
    self.driver.set_window_size(1798, 951)

    # 입력값 설정
    m365_id = data["m365Id"]
    password = data["password"]
    

    # 3 | click | css=.mr-\[6px\] | 
    self.driver.find_element(By.CSS_SELECTOR, ".mr-\\[6px\\]").click()
    # 4 | click | css=.pr-14 | 
    self.driver.find_element(By.CSS_SELECTOR, ".pr-14").click()
    # 5 | type | css=.pr-14 | test1
    self.driver.find_element(By.CSS_SELECTOR, ".pr-14").send_keys("test1")
    # 6 | click | css=.w-full:nth-child(1) .w-2\/3 > .input__name | 
    self.driver.find_element(By.CSS_SELECTOR, ".w-full:nth-child(1) .w-2\\/3 > .input__name").click()
    # 7 | click | css=.ng-invalid:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".ng-invalid:nth-child(1)").click()
    # 8 | type | css=.ng-invalid:nth-child(1) | test
    self.driver.find_element(By.CSS_SELECTOR, ".ng-invalid:nth-child(1)").send_keys("test")
    # 9 | click | css=.input__date | 
    self.driver.find_element(By.CSS_SELECTOR, ".input__date").click()
    # 10 | type | css=.input__date | 2024-12-18
    self.driver.find_element(By.CSS_SELECTOR, ".input__date").send_keys("2024-12-18")


    # M365 아이디 입력
    self.driver.find_element(By.XPATH, '//*[@id="mat-mdc-dialog-0"]/div/div/app-account-create-single/div/form/div/table/tbody/tr[1]/td[2]/input').click()
    self.driver.find_element(By.XPATH, '//*[@id="mat-mdc-dialog-0"]/div/div/app-account-create-single/div/form/div/table/tbody/tr[1]/td[2]/input').send_keys(m365_id)
    #self.driver.find_element(By.CSS_SELECTOR, ".h-16:nth-child(1) > .w-2\\/3 > .input__name").click()
    

    # 비밀번호 입력
    self.driver.find_element(By.XPATH, '//*[@id="mat-mdc-dialog-0"]/div/div/app-account-create-single/div/form/div/table/tbody/tr[2]/td[2]/input').click()
    self.driver.find_element(By.XPATH, '//*[@id="mat-mdc-dialog-0"]/div/div/app-account-create-single/div/form/div/table/tbody/tr[2]/td[2]/input').send_keys(password)


    #self.driver.find_element(By.CSS_SELECTOR, ".w-2\\/3 > .ng-untouched").click()
    # 17 | type | css=.w-2\/3 > .ng-untouched | tesT1234%
    #self.driver.find_element(By.CSS_SELECTOR, ".w-2\\/3 > .ng-untouched").send_keys("tesT1234%")
    # 18 | click | css=.button--save | 
    #self.driver.find_element(By.CSS_SELECTOR, ".button--save").click()
    # 21 | click | css=.btn__orange | 
    #self.driver.find_element(By.CSS_SELECTOR, ".btn__orange").click()

    try:
      self.driver.find_element(By.CSS_SELECTOR, ".button--save").click()

      # 타이머 추가 (2초 대기)
      time.sleep(2)
      
      # <div _ngcontent-ng-c155390960="" class="flex text-center items-center text-base h-[100px]">M365 아이디는 영소문자와 숫자의 조합이어야 합니다.</div>
      # //*[@id="mat-mdc-dialog-2"]/div/div/app-shared-alert/div/div[1]
      # #mat-mdc-dialog-2 > div > div > app-shared-alert > div > div.flex.text-center.items-center.text-base.h-\[100px\]
      
      # 팝업 메시지 확인
      popup_element = WebDriverWait(self.driver, 10).until(
          expected_conditions.presence_of_element_located(
              (By.CSS_SELECTOR, ".flex.text-center.items-center.text-base.h-\\[100px\\]")
          )
      )
      
      popup_message = popup_element.text  # 팝업 메시지 텍스트 가져오기

      # 확인 메시지 또는 리턴 값을 확인
      #success_message = WebDriverWait(self.driver, 10).until(
      #  expected_conditions.presence_of_element_located((By.CSS_SELECTOR, ".success-message"))
      #).text  # 성공 메시지 텍스트 가져오기
            

      if "M365 아이디는 영소문자와 숫자의 조합이어야 합니다." in popup_message:
        print(f"Test passed for M365 ID: {m365_id}. Message: {popup_message}")
        self.driver.save_screenshot(f"expected_message-{m365_id}.png")
      else:
        # 예상 메시지와 다를 경우 스크린샷 저장
        print(f"Unexpected success message for M365 ID: {m365_id}. Message: {popup_message}")
        self.driver.save_screenshot(f"unexpected_message-{m365_id}.png")

      # 버튼
      # //*[@id="mat-mdc-dialog-2"]/div/div/app-shared-alert/div/div[2]/button
      # #mat-mdc-dialog-2 > div > div > app-shared-alert > div > div.flex.flex-row.gap-2.mt-5 > button
      # <button _ngcontent-ng-c155390960="" class="btn__orange ng-star-inserted">확인</button>
      # 요소가 DOM에 나타나는지 확인
      element = WebDriverWait(self.driver, 10).until(
        expected_conditions.presence_of_element_located((By.CSS_SELECTOR, ".btn__orange"))
      )

      element = WebDriverWait(self.driver, 10).until(
        expected_conditions.element_to_be_clickable((By.CSS_SELECTOR, ".btn__orange"))
      )
      # 요소 클릭
      element.click()
      print(f"저장 clicked successfully for M365 ID: {m365_id}!")
    except Exception as e:
            print(f"Error locating .btn__orange for M365 ID: {m365_id}", e)
            self.driver.save_screenshot(f"error_screenshot-{m365_id}.png")  # 디버깅용 스크린샷 저장
            raise e
    
    
  
